import    'utility.ht' 
  as util 
    show isEqual

external abstract class Animal {
  static var race: str;

  constructor (race: str) {
    this.race = race;
  }
}

class Converser {
  function talk    (other: 
    Converser) {}
}

class Profile {
  var name: str;
}

class Person extends Animal   {
  var name: str
  constructor (name: str):  super(name) {
    this.name = name
  }
  function greeting {
    print   ('Hi! I\'m'  ,   name)
  }
}

// This is where the script starts executing.
function main {
  function nested ([arg: str = 'catchya'])  ->void { const cc = arg return cc;  } 

  if (nested() == -1) 
    main();
      else return 1 + 1;;;;;

  (function (num) { return num * num   
  }) ();

  for (var i = 0; i< max ; i *= 5) {
        expect  (value: true);
  }

  while {
    i++
            break
    do    {
      continue

    } while (value is! bool)
  }

  switch (true) {
    1 =>    '1'
    2 => {
      return [
        1,
        2,
        3
      ]
    }
    else => print(  { "name": "Kevin",
    
    
    "age": 16}, 7> 2 ? true : cal(42))
  }

  var ht = Person('Hetu')
  ht.greeting()
}