external class Hetu {

  function createStructfromJson(data)

  function stringify(obj: any) -> any

  function jsonify(obj: any) -> Map

  function eval(code: str) -> any

  function require(path: str)

  function help(id: str)
}

late _hetu

function initHetuEnv(hetu) {
  _hetu = hetu
}

function createStructfromJson(data) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  if (data is Map) {
    return _hetu.createStructfromJson(data)
  }
}

external function _print(obj: any)

/// Stringify and print one or several objects to standard output stream.
function print(... args: any) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  final mapped = args.map((e) => _hetu.stringify(e)).join(' ')
  _print(mapped)
  // _print(args)
}

/// Convert an object into a string.
function stringify(obj: any) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  return _hetu.stringify(obj)
}

/// Convert an object into a json (a Map object).
function jsonify(obj: any) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  return _hetu.jsonify(obj)
}

external function range(startOrStop: num, [stop: num, step: num]) -> Iterable

/// dynamically eval a string content of hetu script code.
function eval(code: str) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  if (code != null) {
    return _hetu.eval(code)
  }
}

/// dynamically eval a source on current sourceContext,
/// `path` is the fullname of this source.
/// Usage:
///   final nsp = require('source1.ht')
function require(path: str) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  return _hetu.require(path)
}

/// Print the documentation of an identifier.
/// Usage:
///   help(require)
function help(id: str) {
  if (_hetu == null) {
    throw 'Hetu environment is not initialized!'
  }
  if (id == null) {
    throw 'Must provide an identifier to get its help.'
  }
  return _hetu.help(id)
}